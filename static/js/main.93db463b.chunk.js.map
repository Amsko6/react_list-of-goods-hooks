{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","a","b","ALPHABET","localeCompare","LENGTH","length","NONE","Error","console","log","reverse","App","useState","setSortType","setIsReversed","wasChanged","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,0DAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAeK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAGNC,EAAY,YAAOH,GA6BzB,OA1BAG,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQL,GACN,KAAKJ,EAASU,SACZ,OAAOF,EAAEG,cAAcF,GAGzB,KAAKT,EAASY,OACZ,OAAOJ,EAAEK,OAASJ,EAAEI,OAGtB,KAAKb,EAASc,KACZ,OAAO,EAGT,QACE,MAAM,IAAIC,MAAM,2BAKtBC,QAAQC,IAAIb,EAAUC,GAElBA,GACFC,EAAaY,UAGRZ,G,SA9CJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAiDE,IAAMmB,EAAgB,WAC3B,MAAgCC,mBAASpB,EAASc,MAAlD,mBAAOV,EAAP,KAAiBiB,EAAjB,KACA,EAAoCD,oBAAS,GAA7C,mBAAOf,EAAP,KAAmBiB,EAAnB,KAmBMC,EAAalB,GACdD,IAAaJ,EAASU,UACtBN,IAAaJ,EAASY,OAE3B,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBpB,IAAaJ,EAASU,UAAY,YAC/DgB,QA3BiB,WACvBL,EAAYrB,EAASU,WAuBjB,iCAQA,wBACEe,KAAK,SACLD,UAAS,4BAAuBpB,IAAaJ,EAASY,QAAU,YAChEc,QA/Be,WACrBL,EAAYrB,EAASY,SA2BjB,4BAQA,wBACEa,KAAK,SACLD,UAAS,6BAAwBnB,GAAc,YAC/CqB,QAnCQ,WACdJ,GAAejB,IA+BX,qBAQCkB,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVE,QAxCI,WACZJ,GAAc,GACdD,EAAYrB,EAASc,OAmCf,sBAUJ,6BACGZ,EAAkBD,EAAiB,CAAEG,WAAUC,eAC7CsB,KAAI,SAAAC,GAAI,OACP,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCjIpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.93db463b.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  // Sort and reverse goods if needed\n  visibleGoods.sort((a, b) => {\n    switch (sortType) {\n      case SortType.ALPHABET: {\n        return a.localeCompare(b);\n      }\n\n      case SortType.LENGTH: {\n        return a.length - b.length;\n      }\n\n      case SortType.NONE: {\n        return 0;\n      }\n\n      default: {\n        throw new Error('Wrong sorting type!');\n      }\n    }\n  });\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const sortedByAlphabet = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const sortedByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const reverse = () => {\n    setIsReversed(!isReversed);\n  };\n\n  const reset = () => {\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  const wasChanged = isReversed\n    || sortType === SortType.ALPHABET\n    || sortType === SortType.LENGTH;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${sortType !== SortType.ALPHABET && 'is-light'}`}\n          onClick={sortedByAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${sortType !== SortType.LENGTH && 'is-light'}`}\n          onClick={sortedByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${!isReversed && 'is-light'}`}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {wasChanged && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {getReorderedGoods(goodsFromServer, { sortType, isReversed })\n          .map(good => (\n            <li data-cy=\"Good\" key={good}>{good}</li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}